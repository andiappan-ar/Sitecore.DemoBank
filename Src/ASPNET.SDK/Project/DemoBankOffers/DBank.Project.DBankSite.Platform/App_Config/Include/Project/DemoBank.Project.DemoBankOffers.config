<?xml version="1.0"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
	<sitecore>
		<sites>
			<site name="dbank-offers"
				  inherits="website"
				  hostName="arsc.dev.local"
				  rootPath="/sitecore/content/DemoBankOffers"
				  startItem="/login"
				  database="master"
				  patch:before="site[@name='website']"
			/>
		</sites>
		<javaScriptServices>
			<apps>
				<!--
          We need to configure an 'app' for the site as well in order to
          enable support for Experience Editor. The URL below will be used
          by the Experience Editor to render pages for editing.
        -->
				<app name="dbank-offers"
					 sitecorePath="/sitecore/content/DemoBankOffers"
					 inherits="defaults"
					serverSideRenderingEngineEndpointUrl="http://localhost:5002/jss-render"
					serverSideRenderingEngineApplicationUrl="http://localhost:5002"
					 serverSideRenderingEngine="http"
					 graphQLEndpoint="/api/DemoBankOffers"
					 />
			</apps>
		</javaScriptServices>

		<api>
			<!--
        Define the app's Sitecore GraphQL API endpoint
        Note: this can be removed if you are not using GraphQL.
        Note: the endpoint must be defined both for integrated and connected type GraphQL queries.
      -->
			<GraphQL>
				<endpoints>
					<demobank-routeGraphQLEndpoint url="/api/DemoBankOffers" type="Sitecore.Services.GraphQL.Hosting.DatabaseAwareGraphQLEndpoint, Sitecore.Services.GraphQL.NetFxHost" resolve="true">
						<url>$(url)</url>

						<enabled>true</enabled>
						<enableSubscriptions>true</enableSubscriptions>

						<!-- lock down the endpoint when deployed to content delivery -->
						<graphiql role:require="ContentDelivery">false</graphiql>
						<enableSchemaExport role:require="ContentDelivery">false</enableSchemaExport>
						<enableStats role:require="ContentDelivery">false</enableStats>
						<enableCacheStats role:require="ContentDelivery">false</enableCacheStats>
						<disableIntrospection role:require="ContentDelivery">true</disableIntrospection>

						<schema hint="list:AddSchemaProvider">
							<content type="Sitecore.Services.GraphQL.Content.ContentSchemaProvider, Sitecore.Services.GraphQL.Content">
								<!-- scope typed template generation to just this app's templates -->
								<templates type="Sitecore.Services.GraphQL.Content.TemplateGeneration.Filters.StandardTemplatePredicate, Sitecore.Services.GraphQL.Content">
									<database>context</database>
									<paths hint="list:AddIncludedPath">
										<templates>/sitecore/templates/Project/DBank</templates>
									</paths>
									<fieldFilter type="Sitecore.Services.GraphQL.Content.TemplateGeneration.Filters.StandardFieldFilter, Sitecore.Services.GraphQL.Content">
										<exclusions hint="raw:AddFilter">
											<!--
                          Remove system fields from the API (e.g. __Layout) to keep the schema lean
                      -->
											<exclude name="__*" />
										</exclusions>
									</fieldFilter>
								</templates>

								<queries hint="raw:AddQuery">
									<!-- enable querying on items via this API -->
									<query name="item" type="Sitecore.Services.GraphQL.Content.Queries.ItemQuery, Sitecore.Services.GraphQL.Content" />
								</queries>

								<fieldTypeMapping ref="/sitecore/api/GraphQL/defaults/content/fieldTypeMappings/standardTypeMapping" />
							</content>
						</schema>

						<!-- Enables the 'jss' graph nodes that are preformatted to use with JSS rendering components, and the datasource resolving queries for JSS -->
						<extenders hint="list:AddExtender">
							<layoutExtender type="Sitecore.JavaScriptServices.GraphQL.JssExtender, Sitecore.JavaScriptServices.GraphQL" resolve="true" />
						</extenders>

						<!-- Determines the security of the service. 'publicService' is open to anonymous access, but requires an SSC API key. -->
						<security ref="/sitecore/api/GraphQL/defaults/security/publicService" />

						<!-- Determines how performance is logged for the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
						<performance ref="/sitecore/api/GraphQL/defaults/performance/standard" />
					</demobank-routeGraphQLEndpoint>
				</endpoints>
			</GraphQL>
		</api>

	</sitecore>
</configuration>